{"ast":null,"code":"import { MeshBuilder, Vector3 } from 'babylonjs';\nimport materials from './materials';\nexport default boxes;\n\nfunction boxes({\n  scene\n}) {\n  const CreateBox = MeshBuilder.CreateBox;\n\n  const _materials = materials(scene),\n        wire = _materials.wire;\n\n  var name;\n  var dim = {\n    size: 0.25\n  };\n  var cubes = {};\n  var items = [1, 1, 1, 2, 2, 2, 3, 3, 3];\n  items.forEach((v, i) => {\n    name = `box_${v}_${i}_${i % 3}`;\n    var meshA = CreateBox(name, dim, scene);\n    meshA.position = new Vector3(-1, v - 2, i % 3 - 1);\n    meshA.material = wire;\n    cubes['A' + i] = meshA;\n    name = `box_${v + 1}_${i}_${i % 3}`;\n    var meshB = CreateBox(name, dim, scene);\n    meshB.position = new Vector3(0, v - 2, i % 3 - 1);\n    meshB.material = wire;\n    cubes['B' + i] = meshB;\n    name = `box_${v + 1}_${i}_${i % 3}`;\n    var meshC = CreateBox(name, dim, scene);\n    meshC.position = new Vector3(1, v - 2, i % 3 - 1);\n    meshC.material = wire;\n    cubes['C' + i] = meshC;\n  });\n  console.log(cubes);\n  return cubes;\n}","map":{"version":3,"sources":["/home/bruce/Projects/github/tictactoe/frontend/src/boxes.js"],"names":["MeshBuilder","Vector3","materials","boxes","scene","CreateBox","wire","name","dim","size","cubes","items","forEach","v","i","meshA","position","material","meshB","meshC","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,WAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAeC,KAAf;;AACA,SAASA,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAwB;AAAA,QACZC,SADY,GACEL,WADF,CACZK,SADY;;AAAA,qBAEHH,SAAS,CAACE,KAAD,CAFN;AAAA,QAEZE,IAFY,cAEZA,IAFY;;AAIpB,MAAIC,IAAJ;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAV;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAZ;AACAA,EAAAA,KAAK,CAACC,OAAN,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpBP,IAAAA,IAAI,GAAI,OAAMM,CAAE,IAAGC,CAAE,IAAGA,CAAC,GAAG,CAAE,EAA9B;AACA,QAAIC,KAAK,GAAGV,SAAS,CAACE,IAAD,EAAOC,GAAP,EAAYJ,KAAZ,CAArB;AACAW,IAAAA,KAAK,CAACC,QAAN,GAAiB,IAAIf,OAAJ,CAAY,CAAC,CAAb,EAAgBY,CAAC,GAAG,CAApB,EAAwBC,CAAC,GAAG,CAAL,GAAU,CAAjC,CAAjB;AACAC,IAAAA,KAAK,CAACE,QAAN,GAAiBX,IAAjB;AACAI,IAAAA,KAAK,CAAC,MAAMI,CAAP,CAAL,GAAiBC,KAAjB;AAEAR,IAAAA,IAAI,GAAI,OAAMM,CAAC,GAAG,CAAE,IAAGC,CAAE,IAAGA,CAAC,GAAG,CAAE,EAAlC;AACA,QAAII,KAAK,GAAGb,SAAS,CAACE,IAAD,EAAOC,GAAP,EAAYJ,KAAZ,CAArB;AACAc,IAAAA,KAAK,CAACF,QAAN,GAAiB,IAAIf,OAAJ,CAAY,CAAZ,EAAeY,CAAC,GAAG,CAAnB,EAAuBC,CAAC,GAAG,CAAL,GAAU,CAAhC,CAAjB;AACAI,IAAAA,KAAK,CAACD,QAAN,GAAiBX,IAAjB;AACAI,IAAAA,KAAK,CAAC,MAAMI,CAAP,CAAL,GAAiBI,KAAjB;AAEAX,IAAAA,IAAI,GAAI,OAAMM,CAAC,GAAG,CAAE,IAAGC,CAAE,IAAGA,CAAC,GAAG,CAAE,EAAlC;AACA,QAAIK,KAAK,GAAGd,SAAS,CAACE,IAAD,EAAOC,GAAP,EAAYJ,KAAZ,CAArB;AACAe,IAAAA,KAAK,CAACH,QAAN,GAAiB,IAAIf,OAAJ,CAAY,CAAZ,EAAeY,CAAC,GAAG,CAAnB,EAAuBC,CAAC,GAAG,CAAL,GAAU,CAAhC,CAAjB;AACAK,IAAAA,KAAK,CAACF,QAAN,GAAiBX,IAAjB;AACAI,IAAAA,KAAK,CAAC,MAAMI,CAAP,CAAL,GAAiBK,KAAjB;AACH,GAlBD;AAoBAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,SAAOA,KAAP;AACH","sourcesContent":["import { MeshBuilder, Vector3 } from 'babylonjs';\nimport materials from './materials';\n\nexport default boxes;\nfunction boxes({scene}) {\n    const { CreateBox } = MeshBuilder;\n    const { wire } = materials(scene);\n\n    var name;\n    var dim = { size: 0.25 };\n    var cubes = {};\n    var items = [1, 1, 1, 2, 2, 2, 3, 3, 3];\n    items.forEach((v, i) => {\n        name = `box_${v}_${i}_${i % 3}`;\n        var meshA = CreateBox(name, dim, scene);\n        meshA.position = new Vector3(-1, v - 2, (i % 3) - 1);\n        meshA.material = wire;\n        cubes['A' + i] = meshA;\n\n        name = `box_${v + 1}_${i}_${i % 3}`;\n        var meshB = CreateBox(name, dim, scene);\n        meshB.position = new Vector3(0, v - 2, (i % 3) - 1);\n        meshB.material = wire;\n        cubes['B' + i] = meshB;\n\n        name = `box_${v + 1}_${i}_${i % 3}`;\n        var meshC = CreateBox(name, dim, scene);\n        meshC.position = new Vector3(1, v - 2, (i % 3) - 1);\n        meshC.material = wire;\n        cubes['C' + i] = meshC;\n    });\n\n    console.log(cubes);\n    return cubes;\n}\n"]},"metadata":{},"sourceType":"module"}