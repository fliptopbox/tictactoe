{"ast":null,"code":"var _jsxFileName = \"/home/bruce/Projects/github/tictactoe/frontend/src/Scene.js\";\nimport * as React from 'react';\nimport { Vector3, MeshBuilder, Animation } from 'babylonjs';\nimport Canvas from './Canvas'; // import the component above linking to file we just created.\n\nimport materials from './materials';\nimport createCamera from './createCamera';\nimport createLight from './createLight';\nimport getBoxes from './boxes';\nimport showAxis from './showAxis';\n\nclass Scene extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sceneDidMount = e => {\n      const scene = e.scene,\n            engine = e.engine;\n      engine.runRenderLoop(() => scene && scene.render()); // This creates and positions a free camera (non-mesh)\n\n      createCamera(e);\n      createLight(e, 'hemi', 'sun', 0.8, [1, 4, 0]);\n      createLight(e, 'point', 'point1', 0.8, [0, 6, -1]);\n      showAxis(3, scene);\n      const boxes = getBoxes(e);\n      const m = materials(e);\n      var CoR_At = new Vector3(0, 0, 0);\n      var sphere = MeshBuilder.CreateSphere('sphere', {\n        diameter: 0.25\n      }, scene);\n      sphere.position = CoR_At;\n      const keys = Object.keys(boxes);\n      const A = keys.slice(0, 9);\n      const B = keys.slice(9, 18);\n      const C = keys.slice(18, 27); // TicTakToe tech-ton-nix  tec-ton-ics\n\n      A.forEach(key => {\n        var s = 3.5;\n        var box = boxes[key]; // box.parent = sphere;\n\n        box.scaling = new Vector3(s, s, s);\n        box.material = m['matA'];\n      });\n      B.forEach(key => {\n        var s = 3.5;\n        var box = boxes[key]; // box.parent = sphere;\n\n        box.scaling = new Vector3(s, s, s);\n        box.material = m['matB'];\n      });\n      C.forEach(key => {\n        var s = 3.5;\n        var box = boxes[key]; // box.parent = sphere;\n\n        box.scaling = new Vector3(s, s, s);\n        box.material = m['matC'];\n      }); // sphere.animations = [];\n      // sphere.animations.push(anim)\n\n      window.turn = function (dim = \"x\", n = 1) {\n        let array = Array(9);\n        array = [...array].map((v, i) => i + 9 + 9);\n        array.forEach(n => {\n          var box = boxes['C' + n % 9];\n          box.parent = sphere;\n        });\n        var anim = new Animation('spin', `rotation.${dim}`, 25, Animation.ANIMATIONTYPE_FLOAT, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        var frames = [{\n          frame: 0,\n          value: 0\n        }, {\n          frame: 100,\n          value: Math.PI / n\n        }];\n        anim.setKeys(frames);\n        scene.beginDirectAnimation(sphere, [anim], 0, 25 * 4, false);\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(Canvas, {\n      sceneDidMount: this.sceneDidMount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Scene;","map":{"version":3,"sources":["/home/bruce/Projects/github/tictactoe/frontend/src/Scene.js"],"names":["React","Vector3","MeshBuilder","Animation","Canvas","materials","createCamera","createLight","getBoxes","showAxis","Scene","Component","sceneDidMount","e","scene","engine","runRenderLoop","render","boxes","m","CoR_At","sphere","CreateSphere","diameter","position","keys","Object","A","slice","B","C","forEach","key","s","box","scaling","material","window","turn","dim","n","array","Array","map","v","i","parent","anim","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","frames","frame","value","Math","PI","setKeys","beginDirectAnimation"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Vector3, MeshBuilder, Animation } from 'babylonjs';\nimport Canvas from './Canvas'; // import the component above linking to file we just created.\n\nimport materials from './materials';\nimport createCamera from './createCamera';\nimport createLight from './createLight';\nimport getBoxes from './boxes';\n\nimport showAxis from './showAxis';\n\nclass Scene extends React.Component {\n    sceneDidMount = e => {\n        const { scene, engine } = e;\n        engine.runRenderLoop(() => scene && scene.render());\n\n        // This creates and positions a free camera (non-mesh)\n        createCamera(e);\n        createLight(e, 'hemi', 'sun', 0.8, [1, 4, 0]);\n        createLight(e, 'point', 'point1', 0.8, [0, 6, -1]);\n\n        showAxis(3, scene);\n        const boxes = getBoxes(e);\n\n        const m = materials(e);\n\n        var CoR_At = new Vector3(0, 0, 0);\n        var sphere = MeshBuilder.CreateSphere(\n            'sphere',\n            { diameter: 0.25 },\n            scene\n        );\n        sphere.position = CoR_At;\n\n        const keys = Object.keys(boxes);\n        const A = keys.slice(0, 9);\n        const B = keys.slice(9, 18);\n        const C = keys.slice(18, 27);\n\n        // TicTakToe tech-ton-nix  tec-ton-ics\n\n        A.forEach(key => {\n            var s = 3.5;\n            var box = boxes[key];\n            // box.parent = sphere;\n            box.scaling = new Vector3(s, s, s);\n            box.material = m['matA'];\n        });\n        B.forEach(key => {\n            var s = 3.5;\n            var box = boxes[key];\n            // box.parent = sphere;\n            box.scaling = new Vector3(s, s, s);\n            box.material = m['matB'];\n        });\n        C.forEach(key => {\n            var s = 3.5;\n            var box = boxes[key];\n            // box.parent = sphere;\n            box.scaling = new Vector3(s, s, s);\n            box.material = m['matC'];\n        });\n\n        // sphere.animations = [];\n        // sphere.animations.push(anim)\n\n        window.turn = function(dim = \"x\", n = 1) {\n\n            let array = Array(9);\n            array = [...array].map((v,i) => i+9+9)\n            array.forEach(n => {\n                var box = boxes['C' + n % 9];\n                box.parent = sphere;\n            });\n            var anim = new Animation(\n                'spin',\n                `rotation.${dim}`,\n                25,\n                Animation.ANIMATIONTYPE_FLOAT,\n                Animation.ANIMATIONLOOPMODE_CONSTANT\n            );\n\n            var frames = [\n                { frame: 0, value: 0 },\n                { frame: 100, value: Math.PI / n }\n            ];\n\n            anim.setKeys(frames);\n            scene.beginDirectAnimation(sphere, [anim], 0, 25 * 4, false);\n        };\n    };\n\n    render() {\n        return <Canvas sceneDidMount={this.sceneDidMount} />;\n    }\n}\n\nexport default Scene;\n"]},"metadata":{},"sourceType":"module"}