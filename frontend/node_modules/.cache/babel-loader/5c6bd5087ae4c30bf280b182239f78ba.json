{"ast":null,"code":"import { Mesh, DynamicTexture, StandardMaterial, Color3, Vector3 } from 'babylonjs';\nexport default showAxis;\n\nfunction showAxis(size, scene) {\n  var axisX = Mesh.CreateLines('axisX', [new Vector3.Zero(), new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0), new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)], scene);\n  axisX.color = new Color3(1, 0, 0);\n  var xChar = makeTextPlane(scene, 'X', 'red', size / 10);\n  xChar.position = new Vector3(0.9 * size, -0.05 * size, 0);\n  var axisY = Mesh.CreateLines('axisY', [new Vector3.Zero(), new Vector3(0, size, 0), new Vector3(-0.05 * size, size * 0.95, 0), new Vector3(0, size, 0), new Vector3(0.05 * size, size * 0.95, 0)], scene);\n  axisY.color = new Color3(0, 1, 0);\n  var yChar = makeTextPlane(scene, 'Y', 'green', size / 10);\n  yChar.position = new Vector3(0, 0.9 * size, -0.05 * size);\n  var axisZ = Mesh.CreateLines('axisZ', [new Vector3.Zero(), new Vector3(0, 0, size), new Vector3(0, -0.05 * size, size * 0.95), new Vector3(0, 0, size), new Vector3(0, 0.05 * size, size * 0.95)], scene);\n  axisZ.color = new Color3(0, 0, 1);\n  var zChar = makeTextPlane(scene, 'Z', 'blue', size / 10);\n  zChar.position = new Vector3(0, 0.05 * size, 0.9 * size);\n}\n\nfunction makeTextPlane(scene, text, color, size) {\n  var dynamicTexture = new DynamicTexture('DynamicTexture', 50, scene, true);\n  dynamicTexture.hasAlpha = true;\n  dynamicTexture.drawText(text, 5, 40, 'bold 36px Arial', color, 'transparent', true);\n  var plane = new Mesh.CreatePlane('TextPlane', size, scene, true);\n  plane.material = new StandardMaterial('TextPlaneMaterial', scene);\n  plane.material.backFaceCulling = false;\n  plane.material.specularColor = new Color3(0, 0, 0);\n  plane.material.diffuseTexture = dynamicTexture;\n  return plane;\n}","map":{"version":3,"sources":["/home/bruce/Projects/github/tictactoe/frontend/src/showAxis.js"],"names":["Mesh","DynamicTexture","StandardMaterial","Color3","Vector3","showAxis","size","scene","axisX","CreateLines","Zero","color","xChar","makeTextPlane","position","axisY","yChar","axisZ","zChar","text","dynamicTexture","hasAlpha","drawText","plane","CreatePlane","material","backFaceCulling","specularColor","diffuseTexture"],"mappings":"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","sourcesContent":["import {\n    Mesh,\n    DynamicTexture,\n    StandardMaterial,\n    Color3,\n    Vector3\n} from 'babylonjs';\n\nexport default showAxis;\nfunction showAxis(size, scene) {\n    var axisX = Mesh.CreateLines(\n        'axisX',\n        [\n            new Vector3.Zero(),\n            new Vector3(size, 0, 0),\n            new Vector3(size * 0.95, 0.05 * size, 0),\n            new Vector3(size, 0, 0),\n            new Vector3(size * 0.95, -0.05 * size, 0)\n        ],\n        scene\n    );\n    axisX.color = new Color3(1, 0, 0);\n    var xChar = makeTextPlane(scene, 'X', 'red', size / 10);\n    xChar.position = new Vector3(0.9 * size, -0.05 * size, 0);\n    var axisY = Mesh.CreateLines(\n        'axisY',\n        [\n            new Vector3.Zero(),\n            new Vector3(0, size, 0),\n            new Vector3(-0.05 * size, size * 0.95, 0),\n            new Vector3(0, size, 0),\n            new Vector3(0.05 * size, size * 0.95, 0)\n        ],\n        scene\n    );\n    axisY.color = new Color3(0, 1, 0);\n    var yChar = makeTextPlane(scene, 'Y', 'green', size / 10);\n    yChar.position = new Vector3(0, 0.9 * size, -0.05 * size);\n    var axisZ = Mesh.CreateLines(\n        'axisZ',\n        [\n            new Vector3.Zero(),\n            new Vector3(0, 0, size),\n            new Vector3(0, -0.05 * size, size * 0.95),\n            new Vector3(0, 0, size),\n            new Vector3(0, 0.05 * size, size * 0.95)\n        ],\n        scene\n    );\n    axisZ.color = new Color3(0, 0, 1);\n    var zChar = makeTextPlane(scene, 'Z', 'blue', size / 10);\n    zChar.position = new Vector3(0, 0.05 * size, 0.9 * size);\n}\n\nfunction makeTextPlane(scene, text, color, size) {\n    var dynamicTexture = new DynamicTexture('DynamicTexture', 50, scene, true);\n    dynamicTexture.hasAlpha = true;\n    dynamicTexture.drawText(\n        text,\n        5,\n        40,\n        'bold 36px Arial',\n        color,\n        'transparent',\n        true\n    );\n    var plane = new Mesh.CreatePlane('TextPlane', size, scene, true);\n    plane.material = new StandardMaterial('TextPlaneMaterial', scene);\n    plane.material.backFaceCulling = false;\n    plane.material.specularColor = new Color3(0, 0, 0);\n    plane.material.diffuseTexture = dynamicTexture;\n    return plane;\n}\n"]},"metadata":{},"sourceType":"module"}